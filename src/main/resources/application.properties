server.port=9271

##spring.datasource.url: jdbc:mysql://localhost/testproject
#
#spring.datasource.url=jdbc:mysql://localhost:3306/storyteller
#spring.datasource.username=root
#spring.datasource.password=pl,[;.
##spring.datasource.driverClassName=com.mysql.jdbc.Driver
#spring.jpa.hibernate.ddl-auto=update


# DataSource settings: set here your own configurations for the database
# connection. In this example we have "netgloo_blog" as database name and
# "root" as username and password.
spring.datasource.url = jdbc:mysql://localhost:3306/storyteller
spring.datasource.username = root
spring.datasource.password = pl,[;.
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

## Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1
#


## Show or not log for each sql query
spring.jpa.show-sql = true
#
## Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = update
#
## Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#
## Use spring.jpa.properties.* for Hibernate native properties (the prefix is
## stripped before adding them to the entity manager)
#
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#spring.jackson.serialization.fail-on-empty-beans=false

# Facebook configuration
# ~~~~~
facebook.uservalidation.url=https://graph.accountkit.com/v1.0/me/
facebook.appsecret=51d180e0002fdf0af98b0322778c6012

# Session related
# ~~~~~
session.expiry.seconds=7200
